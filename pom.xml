<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.1.RELEASE</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.future.saf</groupId>
	<artifactId>saf</artifactId>
	<version>1.0.7-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>saf-basic</module>
		<module>saf-logging</module>
		<module>saf-core</module>

		<module>saf-configcenter</module>
		<module>saf-flowcontrol</module>
		<module>saf-search</module>
		<module>saf-mq</module>
		<module>saf-cache</module>
		<module>saf-db</module>
		<module>saf-rpc</module>
		<module>saf-http</module>
		<module>saf-web</module>

		<module>saf-monitor</module>
	</modules>

	<scm>
		<developerConnection>scm:git:https://github.com/saf-group/saf.git</developerConnection>
		<tag>HEAD</tag>
	</scm>

	<properties>
		<spring.boot.version>2.1.1.RELEASE</spring.boot.version>
		<fastjson.version>1.2.61</fastjson.version>
		<lmax.disruptor.version>3.4.2</lmax.disruptor.version>
		<conversantmedia.disruptor.version>1.2.11</conversantmedia.disruptor.version>
		<mysql-connector-java.version>5.1.38</mysql-connector-java.version>
		<mybatis.version>3.4.5</mybatis.version>
		<mybatis-spring.version>1.3.2</mybatis-spring.version>
		<druid.version>1.0.27</druid.version>
		<com.weibo.motan>1.1.1</com.weibo.motan>
		<hystrix.version>1.5.9</hystrix.version>
		<apollo.version>1.0.0</apollo.version>
		<guava.version>20.0</guava.version>
		<joda-convert.version>2.1.1</joda-convert.version>
		<prometheus.client.version>0.5.0</prometheus.client.version>
		<rocketmq.client.version>4.3.2</rocketmq.client.version>
		<aliyun.oss.client.version>2.6.0</aliyun.oss.client.version>
		<aliyun.java.sdk.cdn.version>3.0.8</aliyun.java.sdk.cdn.version>
		<aliyun.java.sdk.core.version>4.4.1</aliyun.java.sdk.core.version>
		<java.version>1.8</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<nacos.version>1.1.4</nacos.version>
		<dubbo.version>2.7.15</dubbo.version>
	</properties>

	<build>
		<plugins>
			<!-- 对于Maven工程的源代码进行源文件的打包 -->
			<plugin>
				<artifactId>maven-source-plugin</artifactId>
				<configuration>
					<attach>true</attach>
				</configuration>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 以指定项目源码的jdk版本，编译后的jdk版本，以及编码。 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
					<showWarnings>true</showWarnings>
				</configuration>
			</plugin>
			<!-- Resources插件负责处理项目资源文件并拷贝到输出目录。 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<!-- 这个插件的作用是，生成一个压缩版的pom.xml文件，然后在install和deploy阶段使用压缩后的pom.xml文件，替换原来的pom.xml文件 -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>flatten-maven-plugin</artifactId>
				<configuration>
					<updatePomFile>true</updatePomFile>
					<flattenMode>bom</flattenMode>
				</configuration>
				<executions>
					<execution>
						<id>flatten</id>
						<phase>process-resources</phase>
						<goals>
							<goal>flatten</goal>
						</goals>
					</execution>
					<execution>
						<id>flatten.clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>true</addMavenDescriptor>
						<index>true</index>
						<manifest>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Specification-Version>${project.version}</Specification-Version>
							<Implementation-Version>${project.version}</Implementation-Version>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<repositories>
		<repository>
			<id>central-repos</id>
			<name>Central Repository</name>
			<url>http://repo.maven.apache.org/maven2</url>
		</repository>
		<repository>
			<id>aliyun-repos</id>
			<url>http://maven.aliyun.com/nexus/content/groups/public/</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>future_releases</id>
			<name>releases</name>
			<!-- <url>http://repo-nexus.future.com:30834/nexus/content/repositories/releases</url> -->
			<url>http://repo-nexus.future.com:30834/repository/maven-releases/</url>
		</repository>
		<snapshotRepository>
			<id>future_snapshots</id>
			<name>snapshots</name>
			<!-- <url>http://repo-nexus.future.com:30834/nexus/content/repositories/snapshots</url> -->
			<url>http://repo-nexus.future.com:30834/repository/maven-snapshots/</url>
		</snapshotRepository>
	</distributionManagement>

	<dependencyManagement>

		<dependencies>


			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-autoconfigure</artifactId>
				<version>${spring.boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-actuator</artifactId>
				<version>${spring.boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-json</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework.boot</groupId>
						<artifactId>spring-boot-starter-logging</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-basic</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-core</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-logging-basic</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-logging-apollo</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-monitor-basic</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-monitor-prometheus</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-configcenter-apollo</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-cache-redis</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-cache-jvm</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-db-druid</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-mq-rocketmq</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-web-basic</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-web-classic</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-rpc-motan</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-rpc-dubbo</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-configcenter-basic</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-configcenter-apollo</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-http-basic</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-http-apache-httpcomponents</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-flowcontrol-sentinel-basic</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.future.saf</groupId>
				<artifactId>saf-flowcontrol-sentinel-ext-apollo</artifactId>
				<version>1.0.7-SNAPSHOT</version>
			</dependency>


			<!-- (1).begin: all commons -->
			<!-- version latest: Jul 23, 2019 -->
			<!-- 是编码和解码组件，提供常用的编码和解码方法，如DES、SHA1、MD5、Base64、URL和Soundx等。 -->
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.13</version>
			</dependency>
			<!-- version latest: Jul 05, 2014 -->
			<!-- 提供统一的日志接口，同时兼顾轻量级和不依赖于具体的实现。类包给中间件/日志工具开发者一个简单的日志操作抽象，允许程序开发人员使用不同的具体日志实现工具。 -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.2</version>
			</dependency>
			<!-- version latest: Jul 09, 2019 -->
			<!-- 为Java标准的Collections API提供了相当好的补充。在此基础上对其常用的数据结构操作进行了很好的封装、抽象和补充。 -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>4.4</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>3.8.1</version>
			</dependency>
			<!-- (1).end: all commons -->

			<!-- (2).begin: all jsons -->
			<!-- version latest: May 16, 2019 -->
			<!-- Jackson 是当前用的比较广泛的，用来序列化和反序列化 json 的 Java 的开源框架。Jackson 社 区相对比较活跃，更新速度也比较快， 
				从 Github 中的统计来看，Jackson 是最流行的 json 解析器之一 。 Spring MVC 的默认 json 解析器便是 Jackson。 
				Jackson 优点很多。 Jackson 所依赖的 jar 包较少 ，简单易用。与其他 Java 的 json 的框架 Gson 等相比， Jackson 
				解析大的 json 文件速度比较快；Jackson 运行时占用内存比较低，性能比较好；Jackson 有灵活的 API，可以很容易进行扩展和定制。 -->
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>2.9.9</version>
			</dependency>
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.8.6</version>
			</dependency>
			<!-- (2).end: all jsons -->

			<!-- begin: httpcomponents -->
			<!-- version latest: Jun 11, 2019 -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.9</version>
			</dependency>
			<!-- <dependency> -->
			<!-- <groupId>org.apache.httpcomponents</groupId> -->
			<!-- <artifactId>httpclient</artifactId> -->
			<!-- <version>4.5.8</version> -->
			<!-- <exclusions> -->
			<!-- <exclusion> -->
			<!-- <groupId>org.apache.httpcomponents</groupId> -->
			<!-- <artifactId>httpcore</artifactId> -->
			<!-- </exclusion> -->
			<!-- <exclusion> -->
			<!-- <groupId>commons-logging</groupId> -->
			<!-- <artifactId>commons-logging</artifactId> -->
			<!-- </exclusion> -->
			<!-- <exclusion> -->
			<!-- <groupId>commons-codec</groupId> -->
			<!-- <artifactId>commons-codec</artifactId> -->
			<!-- </exclusion> -->
			<!-- </exclusions> -->
			<!-- </dependency> -->
			<!-- version latest: Jan 18, 2019 -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore</artifactId>
				<version>4.4.11</version>
			</dependency>
			<!-- version latest: Jan 18, 2019 -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpcore-nio</artifactId>
				<version>4.4.11</version>
			</dependency>
			<!-- version latest: Jul 20, 2018 -->
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpasyncclient</artifactId>
				<version>4.1.4</version>
			</dependency>
			<!-- end: httpcomponents version latest -->

			<dependency>
				<groupId>com.alibaba.csp</groupId>
				<artifactId>ahas-sentinel-client</artifactId>
				<version>1.2.1</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.csp</groupId>
				<artifactId>sentinel-web-servlet</artifactId>
				<version>1.7.1</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.csp</groupId>
				<artifactId>sentinel-annotation-aspectj</artifactId>
				<version>1.7.1</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.csp</groupId>
				<artifactId>sentinel-core</artifactId>
				<version>1.7.1</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.csp</groupId>
				<artifactId>sentinel-transport-simple-http</artifactId>
				<version>1.7.1</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.csp</groupId>
				<artifactId>sentinel-datasource-apollo</artifactId>
				<version>1.7.1</version>
			</dependency>

			<!-- Json -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${fastjson.version}</version>
			</dependency>
			<!-- JSON end -->

			<dependency>
				<groupId>com.lmax</groupId>
				<artifactId>disruptor</artifactId>
				<version>${lmax.disruptor.version}</version>
			</dependency>
			<dependency>
				<groupId>com.conversantmedia</groupId>
				<artifactId>disruptor</artifactId>
				<version>${conversantmedia.disruptor.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- mysql connector -->
			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql-connector-java.version}</version>
			</dependency>

			<!-- druid db connector pool -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>

			<!-- mybatis dao -->
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis</artifactId>
				<version>${mybatis.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mybatis</groupId>
				<artifactId>mybatis-spring</artifactId>
				<version>${mybatis-spring.version}</version>
			</dependency>

			<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-collections4 -->
			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>${joda-time.version}</version>
			</dependency>
			<dependency>
				<groupId>org.joda</groupId>
				<artifactId>joda-convert</artifactId>
				<version>${joda-convert.version}</version>
			</dependency>

			<!-- motan begin -->
			<dependency>
				<groupId>com.weibo</groupId>
				<artifactId>motan-core</artifactId>
				<version>${com.weibo.motan}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.weibo</groupId>
				<artifactId>motan-transport-netty</artifactId>
				<version>${com.weibo.motan}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.weibo</groupId>
				<artifactId>motan-springsupport</artifactId>
				<version>${com.weibo.motan}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.weibo</groupId>
				<artifactId>motan-registry-zookeeper</artifactId>
				<version>${com.weibo.motan}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- motan end -->

			<!-- Apache Dubbo Begin -->
			<!-- <dependency> -->
			<!-- <groupId>org.apache.dubbo</groupId> -->
			<!-- <artifactId>dubbo-dependencies-bom</artifactId> -->
			<!-- <version>${dubbo.version}</version> -->
			<!-- <type>pom</type> -->
			<!-- <scope>import</scope> -->
			<!-- </dependency> -->

			<!-- <dependency> -->
			<!-- <groupId>org.apache.dubbo</groupId> -->
			<!-- <artifactId>dubbo-spring-boot-starter</artifactId> -->
			<!-- <version>${dubbo.version}</version> -->
			<!-- </dependency> -->

			<!-- <dependency> -->
			<!-- <groupId>org.apache.dubbo</groupId> -->
			<!-- <artifactId>dubbo-registry-nacos</artifactId> -->
			<!-- <version>${dubbo.version}</version> -->
			<!-- <exclusions> -->
			<!-- <exclusion> -->
			<!-- <groupId>org.springframework</groupId> -->
			<!-- <artifactId>spring</artifactId> -->
			<!-- </exclusion> -->
			<!-- <exclusion> -->
			<!-- <groupId>javax.servlet</groupId> -->
			<!-- <artifactId>servlet-api</artifactId> -->
			<!-- </exclusion> -->
			<!-- </exclusions> -->
			<!-- </dependency> -->

			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo</artifactId>
				<version>${dubbo.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.servlet</groupId>
						<artifactId>servlet-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-context</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.google.code.gson</groupId>
						<artifactId>gson</artifactId>
					</exclusion>
					<exclusion>
						<groupId>org.springframework</groupId>
						<artifactId>spring-context-support</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.apache.dubbo</groupId>
				<artifactId>dubbo-dependencies-zookeeper</artifactId>
				<version>${dubbo.version}</version>
				<type>pom</type>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-log4j12</artifactId>
					</exclusion>
					<exclusion>
						<groupId>com.google.guava</groupId>
						<artifactId>guava</artifactId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<groupId>log4j</groupId>
						<artifactId>log4j</artifactId>
					</exclusion>
				</exclusions>
			</dependency>

			<!-- Apache Dubbo End -->

			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.25</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>2.11.1</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-slf4j-impl</artifactId>
				<!-- <version>2.10.0</version> -->
				<version>2.11.1</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.netflix.hystrix</groupId>
				<artifactId>hystrix-core</artifactId>
				<version>${hystrix.version}</version>
			</dependency>
			<dependency>
				<groupId>com.netflix.hystrix</groupId>
				<artifactId>hystrix-serialization</artifactId>
				<version>${hystrix.version}</version>
			</dependency>
			<dependency>
				<groupId>com.netflix.hystrix</groupId>
				<artifactId>hystrix-metrics-event-stream</artifactId>
				<version>${hystrix.version}</version>
			</dependency>
			<dependency>
				<groupId>com.netflix.hystrix</groupId>
				<artifactId>hystrix-javanica</artifactId>
				<version>${hystrix.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ctrip.framework.apollo</groupId>
				<artifactId>apollo-client</artifactId>
				<version>${apollo.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>com.ctrip.framework.apollo</groupId>
				<artifactId>apollo-core</artifactId>
				<version>${apollo.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>slf4j-api</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
					<exclusion>
						<artifactId>slf4j-log4j12</artifactId>
						<groupId>org.slf4j</groupId>
					</exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>

			<!-- nacos -->
			<dependency>
				<groupId>com.alibaba.nacos</groupId>
				<artifactId>nacos-client</artifactId>
				<version>${nacos.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.nacos</groupId>
				<artifactId>nacos-common</artifactId>
				<version>${nacos.version}</version>
			</dependency>
			<dependency>
				<groupId>com.alibaba.nacos</groupId>
				<artifactId>nacos-core</artifactId>
				<version>${nacos.version}</version>
			</dependency>

			<!-- prometheus -->
			<dependency>
				<groupId>io.prometheus</groupId>
				<artifactId>simpleclient</artifactId>
				<version>${prometheus.client.version}</version>
			</dependency>
			<dependency>
				<groupId>io.prometheus</groupId>
				<artifactId>simpleclient_hotspot</artifactId>
				<version>${prometheus.client.version}</version>
			</dependency>
			<dependency>
				<groupId>io.prometheus</groupId>
				<artifactId>simpleclient_httpserver</artifactId>
				<version>${prometheus.client.version}</version>
			</dependency>

			<!-- aliyun-oss -->
			<dependency>
				<groupId>com.aliyun.oss</groupId>
				<artifactId>aliyun-sdk-oss</artifactId>
				<version>${aliyun.oss.client.version}</version>
			</dependency>


			<!-- aliyun-cdn -->
			<dependency>
				<groupId>com.aliyun</groupId>
				<artifactId>aliyun-java-sdk-cdn</artifactId>
				<version>${aliyun.java.sdk.cdn.version}</version>
			</dependency>

			<dependency>
				<groupId>com.aliyun</groupId>
				<artifactId>aliyun-java-sdk-core</artifactId>
				<version>${aliyun.java.sdk.core.version}</version>
			</dependency>

			<!-- rocketmq -->
			<dependency>
				<groupId>org.apache.rocketmq</groupId>
				<artifactId>rocketmq-client</artifactId>
				<version>${rocketmq.client.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
</project>
